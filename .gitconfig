[core]
  excludesfile = ~/.gitignore_global

[user]
  email = pnlybubbles@gmail.com
  name = pnlybubbles

[push]
  default = simple

[pull]
  ff = true

[alias]
  g = grep
  n = now
  i = init
  cl = clone
  s = status
  sh = show
  sho = remote show origin
  ra = remote add
  rao = remote add origin
  rem = remote -v
  f = fetch
  re = rebase
  rea = rebase --abort
  rec = rebase --continue
  rebase-to = "!$SHELL -c 'git rebase --interactive $(fcs)'"
  pk = cherry-pick
  pka = cherry-pick --abort
  pkc = cherry-pick --continue
  cherry-pick-one = "!$SHELL -c 'git cherry-pick $(fcsa)'"
  cherry-pick-range = "!$SHELL -c 'git cherry-pick $(fcsa)^..$(fcsa)'"
  cherry-picking-hash = "!git status | grep -oP \"(?<=commit\\s)[0-9a-f]+\""
  m = merge --no-ff
  mff = merge --ff
  a = add
  aa = add --all
  ap = add -p
  cm = commit
  wip = commit -m 'wip'
  cm-empty = commit --allow-empty --allow-empty-message -m ''
  co = commit -a
  ca = commit --amend
  t = tag
  pl = pull --prune
  plr = pull --rebase
  p = push
  po = push -u origin
  poc = !git push -u origin $(git current-branch)
  pc = !git push -u $(git remote | fzf) $(git current-branch)
  ph = push heroku
  l = log
  lm = log --author=pnlybubbles
  lp = log -p
  tr = log --all --graph --pretty='format:%C(yellow)%h%Creset%C(red)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  d = diff
  diff-with = "!$SHELL -c 'git diff $(fcsa)'"
  diff-between = "!$SHELL -c 'git diff $(fcsa)..$(fcsa)'"
  dp = diff HEAD~1
  dn = diff --name-only
  dd = diff develop
  ddn = diff develop --name-only
  dmas = diff master
  dmasn = diff master --name-only
  dc = diff --cached
  dcn = diff --cached --name-only
  ds = diff HEAD..stash@{0}
  dsn = diff HEAD..stash@{0} --name-only
  dh = diff HEAD
  dhn = diff HEAD --name-only
  dhh = diff HEAD~1
  dhhn = diff HEAD~1 --name-only
  dhhh = diff HEAD~2
  dhhhn = diff HEAD~2 --name-only
  dhhhh = diff HEAD~3
  dhhhhn = diff HEAD~3 --name-only
  b = branch
  bb = branch -avv
  bl = branch -a
  bm = branch -m
  bd = branch -d
  bf = branch -f
  c = checkout
  cc = checkout -
  cd = checkout develop
  cs = checkout stash@{0}
  cmas = checkout master
  cb = checkout -b
  cp = checkout -p
  checkout-to = "!$SHELL -c 'git checkout $(fcsa)'"
  diff3-conflict = checkout --conflict=diff3
  unstage = reset --
  unstage-newfile = rm --cached
  unstage-all = reset HEAD
  unstage-all-init = rm --cached -r .
  us = unstage
  usa = unstage-all
  reset-tree = checkout .
  reset-index = reset HEAD
  reset-all = reset --hard HEAD
  cancel-commit = reset --soft HEAD^
  cancel-commit-init = update-ref -d HEAD
  cancel-index = reset HEAD^
  cancel-all = reset --hard HEAD^
  cancel-rebase = reset --hard ORIG_HEAD
  cancel-merge = reset --merge
  cancel-merge-commit = reset --hard origin
  restore-to-ref = reset --hard
  reset-to = "!$SHELL -c 'git reset --hard $(fcs)'"
  delete-untraced-list = clean -f -n
  delete-untraced = clean -f -d
  st = stash
  stu = stash save -u
  stp = stash -p
  stl = stash list
  sta = stash apply
  r = reflog
  delete-merged-branch = "!f () { git checkout $1; git branch --merged|egrep -v '\\*|develop|master'|xargs git branch -d; }; f"
  w = worktree
  enable-rerere = config rerere.enabled true
  current-branch = rev-parse --abbrev-ref HEAD
  merge-feat = "!f() { if [ $(git current-branch) = 'pu' ]; then git reset --hard master; for b in $(git branch --sort=committerdate | grep -oe \"feat/[^ ]\\+\"); do git merge --no-ff --no-edit $b; done; else echo 'merge-feat is not allowed except for branch: \"pu\".'; fi }; f"
  push-feat = "!git push -f origin $(git branch --sort=committerdate | grep -oe \"feat/[^ ]\\+\")"
  push-gomi = "!f () { hub create pnlybubbles-gomibako/$(basename `pwd`); git push -u origin master; }; f"
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
