#!/bin/sh

show_help () {
  echo 'Usage: cab [COMMAND]'
  echo
  echo 'Commands:'
  echo '\t start           start container'
  echo '\t sh [ARGUMENTS]  attach to container. if [ARGUMENTS] specified, it will be executed.'
  echo '\t stop            stop containers including started from inside container'
  echo '\t clean           clean unused images'
  echo '\t build           build image'
  echo '\t help, --help    show this'
}

case $1 in
  '' | 'start' )
    docker run \
      -v /Users/pnlybubbles/cab:/cab \
      -v /var/run/docker.sock:/var/run/docker.sock \
      --name cab \
      --label cab.primary \
      --rm \
      -itd \
      cab
    ;;
  'stop' )
    primary=`docker ps -qf 'label=cab.primary'`
    if [ ! -z "$primary" ]; then
      docker stop $primary
    fi
    replica=`docker ps -qf 'label=cab.replica'`
    if [ ! -z "$replica" ]; then
      docker stop $replica
    fi
    ;;
  'sh' )
    shift
    if [ ! -z "$*" ]; then
      docker exec \
        -it \
        cab \
        $*
    else
      docker exec \
        -it \
        cab \
        zsh -c 'eval `ssh-agent` && ssh-add && source ~/.zshrc-packages && env TERM=xterm-256color tmux'
    fi
    ;;
  'clean' )
    img=`docker images -f 'dangling=true' -q`
    if [ ! -z "$img" ]; then
      docker rmi $img
    fi
    ;;
  'build' )
    shift
    docker build \
      -t cab \
      $* \
      /Users/pnlybubbles/cab
    ;;
  'help' | '--help')
    show_help
    ;;
  * )
    echo 'ERROR: Unknown arguments'
    echo
    show_help
    return 1
    ;;
esac
